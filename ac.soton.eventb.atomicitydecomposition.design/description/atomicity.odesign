<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:filter="http://www.eclipse.org/sirius/diagram/description/filter/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="atomicity" version="12.0.0.2017041100">
  <ownedViewpoints name="ERSDiagram" modelFileExtension="bum">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ERS Diagram" domainClass="atomicitydecomposition::FlowDiagram">
      <layout xsi:type="description_1:CompositeLayout"/>
      <defaultLayer name="Default">
        <nodeMappings name="LeafNode" labelDirectEdit="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DirectEditLeafName']" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::Leaf">
          <style xsi:type="style:SquareDescription" labelExpression="aql: self.getLeafLabelWithParameters(self.eContainer(), self.eContainer().eContainer())" labelPosition="node" resizeKind="NSEW" width="15" height="6">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="XorNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::Xor">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="XOR" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="5" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="AndNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::And">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="AND" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="5" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="LoopNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::Loop">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="LOOP" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="5" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="AllNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::All">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="service:getAllLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="SomeNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::Some">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="service:getSomeLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="OrNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::Or">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="OR" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="5" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ParNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::Par">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="service:getParLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="OneNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::One">
          <style xsi:type="style:EllipseNodeDescription" showIcon="false" labelExpression="service:getOneLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="SubFlowNode" semanticCandidatesExpression="service:getFlowDiagramAndChildrenNodes()" domainClass="atomicitydecomposition::FlowDiagram">
          <style xsi:type="style:DotDescription" showIcon="false" labelExpression="[''/]" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <forbiddenSides>WEST</forbiddenSides>
            <forbiddenSides>EAST</forbiddenSides>
            <forbiddenSides>NORTH</forbiddenSides>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.eContainer().oclIsKindOf(machine::Machine)">
            <style xsi:type="style:EllipseNodeDescription" labelExpression="service:getFlowDiagramLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="20" verticalDiameterComputationExpression="6">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="refinesEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='SubFlowNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='AndNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LoopNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='OrNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='ParNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='XorNode']" targetFinderExpression="feature:refine">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="andLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='AndNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:andLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="loopLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LoopNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:loopLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="allLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='AllNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:allLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="someLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='SomeNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:someLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="orLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='OrNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:orLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="parLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='ParNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:parLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="xorLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='XorNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:xorLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="oneLinkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='OneNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetFinderExpression="feature:oneLink">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DDiagramElement).target.oclAsType(atomicitydecomposition::Child).ref">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="decomposesEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='SubFlowNode']" targetFinderExpression="feature:decompose">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE" endsCentering="Source">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="LeafTools" label="Leaf Creation Tools">
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="This tool allows the user to create a new instance of Leaf in the model.&#xD;&#xA;&#xD;&#xA;Note : the variable dummyForUUIDSettingWorkaround is a workaround to solve what looks like an EventB EMF Bug : &#xD;&#xA;When a Leaf is saved, the method LeafImpl.eIsSet(LeafImpl.java:210) is called.&#xD;&#xA;This method then calls a set of methods, which finally calls : &#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.setInternalId(EventBElementImpl.java:479)&#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.getElementIdentification(EventBElementImpl.java:208)&#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.doGetReference(EventBElementImpl.java:290)&#xD;&#xA;(use arrow keys to continue reading)&#xD;&#xA;Calling org.eventb.emf.core.impl.EventBElementImpl.doGetReference(EventBElementImpl.java:290) when the new Leaf UUID is not set, creates a call on org.eventb.emf.core.impl.EventBElementImpl.setInternalId(EventBElementImpl.java:479)&#xD;&#xA;which itself throws an Illegal State Exception (see bellow, using arrow keys).&#xD;&#xA;&#xD;&#xA;My workaround then just consists in acessing the new instance's ressource, in order to make sure that its UUID has been correctly initialized.&#xD;&#xA;That way, this issue, which prevent the model to be saved is avoided.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;To reproduce this bug, remove the dummy variable, create a Leaf, and save the Diagram.&#xD;&#xA;You'll see this Exception thrown.&#xD;&#xA;complete trace : &#xD;&#xA;java.lang.IllegalStateException: Cannot modify resource set without a write transaction&#xD;&#xA;&#x9;at org.eclipse.emf.transaction.impl.TransactionChangeRecorder.assertWriting(TransactionChangeRecorder.java:349)&#xD;&#xA;&#x9;at org.eclipse.emf.transaction.impl.TransactionChangeRecorder.appendNotification(TransactionChangeRecorder.java:303)&#xD;&#xA;&#x9;at org.eclipse.emf.transaction.impl.TransactionChangeRecorder.processObjectNotification(TransactionChangeRecorder.java:285)&#xD;&#xA;&#x9;at org.eclipse.emf.transaction.impl.TransactionChangeRecorder.notifyChanged(TransactionChangeRecorder.java:241)&#xD;&#xA;&#x9;at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)&#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.setInternalId(EventBElementImpl.java:479)&#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.getElementIdentification(EventBElementImpl.java:208)&#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.doGetReference(EventBElementImpl.java:290)&#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.getReference(EventBElementImpl.java:195)&#xD;&#xA;&#x9;at org.eventb.emf.core.impl.EventBElementImpl.eIsSet(EventBElementImpl.java:416)&#xD;&#xA;&#x9;at ac.soton.eventb.atomicitydecomposition.impl.ChildImpl.eIsSet(ChildImpl.java:150)&#xD;&#xA;&#x9;at ac.soton.eventb.atomicitydecomposition.impl.LeafImpl.eIsSet(LeafImpl.java:210)" name="createLeaf" label="Leaf" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LeafNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::Leaf" referenceName="refine">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'New Event '+container.refine->size()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="DirectEditLeafName" label="Edit Leaf Name" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="CreateRefinement" label="Add Refinement" precondition="aql:self.oclIsKindOf(atomicitydecomposition::Leaf)">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::FlowDiagram" referenceName="decompose">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:Let" variableName="parentFlowDiagram" valueExpression="aql: (if (instance.eContainer().eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram)) then instance.eContainer().eContainer() else instance.eContainer().eContainer().eContainer() endif).oclAsType(atomicitydecomposition::FlowDiagram)">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:parentFlowDiagram.parameters" iteratorName="parentParameter">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::TypedParameterExpression" referenceName="parameters" variableName="parameterCopy">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="parameterCopy">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="annotations" valueExpression="aql:parentParameter.annotations"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="extensions" valueExpression="aql:parentParameter.extensions"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="attributes" valueExpression="aql:parentParameter.attributes"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="generated" valueExpression="aql:parentParameter.generated"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="localGenerated" valueExpression="aql:parentParameter.localGenerated"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="internalId" valueExpression="aql:parentParameter.internalId"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="aql:parentParameter.comment"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:parentParameter.name"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:parentParameter.type"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="InputExpression" valueExpression="aql:parentParameter.InputExpression"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:instance.eContainer() &lt;> null">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:instance.eContainer().eContainer() &lt;> null">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:instance.eContainer().eContainer().oclIsKindOf(atomicitydecomposition::Constructor)">
                          <subModelOperations xsi:type="tool_1:Let" variableName="parentConstructor" valueExpression="aql:instance.eContainer().eContainer().oclAsType(atomicitydecomposition::Constructor)">
                            <subModelOperations xsi:type="tool_1:Let" variableName="parentConstructorParameter" valueExpression="aql:parentConstructor.getParameterFromConstructor()">
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:parentConstructorParameter &lt;> null">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::TypedParameterExpression" referenceName="parameters" variableName="constructorParameterCopy">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="constructorParameterCopy">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="annotations" valueExpression="aql:parentConstructorParameter.annotations"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="extensions" valueExpression="aql:parentConstructorParameter.extensions"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="attributes" valueExpression="aql:parentConstructorParameter.attributes"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="generated" valueExpression="aql:parentConstructorParameter.generated"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="localGenerated" valueExpression="aql:parentConstructorParameter.localGenerated"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="internalId" valueExpression="aql:parentConstructorParameter.internalId"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="aql:parentConstructorParameter.comment"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:parentConstructorParameter.name"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:parentConstructorParameter.type"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="InputExpression" valueExpression="aql:parentConstructorParameter.InputExpression"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="ConstructorCreationTools" label="Constructor Creation Tools">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createAll" label="All" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='AllNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::All" referenceName="refine">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::TypedParameterExpression" referenceName="newParameter" variableName="createdAllParameter"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="newParameter" valueExpression="var:createdAllParameter"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:createdAllParameter">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Parameter info of the new All node">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <buttons labelExpression="OK" isEnabledExpression="aql:self.oclAsType(atomicitydecomposition::TypedParameterExpression).name &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).name.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression.size() > 0" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <page name="AllDialogDefaultPage" labelExpression="Enter the parameter for the new All node" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self" groups="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='createAll']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.2/@subModelOperations.0/@groups.0"/>
                        <groups name="AllDialogDefaultGroup" labelExpression="Parameter description" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self">
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.type">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('type').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression InputExpression" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('InputExpression')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('InputExpression'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('InputExpression').changeable" valueExpression="aql:self.InputExpression">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="InputExpression" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('InputExpression').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression comment" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comment')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comment'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comment').changeable" valueExpression="aql:self.comment">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="var:newValue"/>
                            </initialOperation>
                          </controls>
                        </groups>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createAnd" label="And" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='AndNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::And" referenceName="refine"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createLoop" label="Loop" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='LoopNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::Loop" referenceName="refine"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createOne" label="One" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='OneNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::One" referenceName="refine">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::TypedParameterExpression" referenceName="newParameter" variableName="createdOneParameter"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="newParameter" valueExpression="var:createdOneParameter"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:createdOneParameter">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Parameter info of the new One node">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <buttons labelExpression="OK" isEnabledExpression="aql:self.oclAsType(atomicitydecomposition::TypedParameterExpression).name &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).name.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression.size() > 0" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <page name="OneDialogDefaultPage" labelExpression="Enter the parameter for the new One node" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self" groups="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='createOne']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.2/@subModelOperations.0/@groups.0"/>
                        <groups name="OneDialogDefaultGroup" labelExpression="Parameter description" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self">
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.type">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('type').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression InputExpression" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('InputExpression')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('InputExpression'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('InputExpression').changeable" valueExpression="aql:self.InputExpression">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="InputExpression" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('InputExpression').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression comment" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comment')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comment'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comment').changeable" valueExpression="aql:self.comment">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="var:newValue"/>
                            </initialOperation>
                          </controls>
                        </groups>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createOr" label="Or" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='OrNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::Or" referenceName="refine"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createPar" label="Par" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='ParNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::Par" referenceName="refine">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::TypedParameterExpression" referenceName="newParameter" variableName="createdParParameter"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="newParameter" valueExpression="var:createdParParameter"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:createdParParameter">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Parameter info of the new Par node">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <buttons labelExpression="OK" isEnabledExpression="aql:self.oclAsType(atomicitydecomposition::TypedParameterExpression).name &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).name.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression.size() > 0" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <page name="ParDialogDefaultPage" labelExpression="Enter the parameter for the new Par node" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self" groups="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='createPar']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.2/@subModelOperations.0/@groups.0"/>
                        <groups name="ParDialogDefaultGroup" labelExpression="Parameter description" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self">
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.type">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('type').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression InputExpression" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('InputExpression')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('InputExpression'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('InputExpression').changeable" valueExpression="aql:self.InputExpression">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="InputExpression" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('InputExpression').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression comment" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comment')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comment'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comment').changeable" valueExpression="aql:self.comment">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="var:newValue"/>
                            </initialOperation>
                          </controls>
                        </groups>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createSome" label="Some" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='SomeNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::Some" referenceName="refine">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::TypedParameterExpression" referenceName="newParameter" variableName="createdSomeParameter"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="newParameter" valueExpression="var:createdSomeParameter"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:createdSomeParameter">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Parameter info of the new Some node">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <buttons labelExpression="OK" isEnabledExpression="aql:self.oclAsType(atomicitydecomposition::TypedParameterExpression).name &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).name.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression.size() > 0" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </buttons>
                        <page name="SomeDialogDefaultPage" labelExpression="Enter the parameter for the new Some node" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self" groups="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='createSome']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.2/@subModelOperations.0/@groups.0"/>
                        <groups name="SomeDialogDefaultGroup" labelExpression="Parameter description" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self">
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.type">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('type').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression InputExpression" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('InputExpression')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('InputExpression'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('InputExpression').changeable" valueExpression="aql:self.InputExpression">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="InputExpression" valueExpression="var:newValue"/>
                            </initialOperation>
                            <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('InputExpression').lowerBound = 1">
                              <style>
                                <labelFontFormat>bold</labelFontFormat>
                              </style>
                            </conditionalStyles>
                          </controls>
                          <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression comment" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comment')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comment'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comment').changeable" valueExpression="aql:self.comment">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="var:newValue"/>
                            </initialOperation>
                          </controls>
                        </groups>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createXor" label="Xor" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@nodeMappings[name='XorNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::Xor" referenceName="refine"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:Let" variableName="dummyForUUIDSettingWorkaround" valueExpression="aql:EcoreUtil.getID(instance)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Create Links">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="ConnectConstructorToLeaf" label="Constructor -> Leaf link" edgeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='allLinkEdge'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='andLinkEdge'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='loopLinkEdge'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='oneLinkEdge'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='orLinkEdge'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='parLinkEdge'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='someLinkEdge'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='xorLinkEdge']" connectionStartPrecondition="service:checkIsConstructorConnectionStartAllowed()">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::Loop)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="loopLink" valueExpression="var:target"/>
                </cases>
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::Or)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="orLink" valueExpression="aql:self.addElementToOrNode(target)"/>
                </cases>
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::Xor)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="xorLink" valueExpression="aql:self.addElementToXorNode(target)"/>
                </cases>
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::And)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="andLink" valueExpression="aql:self.addElementToAndNode(target)"/>
                </cases>
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::Some)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="someLink" valueExpression="var:target"/>
                </cases>
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::Par)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="parLink" valueExpression="var:target"/>
                </cases>
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::All)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="allLink" valueExpression="var:target"/>
                </cases>
                <cases conditionExpression="aql:self.oclIsKindOf(atomicitydecomposition::One)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="oneLink" valueExpression="var:target"/>
                </cases>
                <default/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="refinesLink" label="Refines Link" edgeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@edgeMappings[name='refinesEdge']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="refine" valueExpression="service:addRefinedElementToFlowDiagram(target)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <toolSection name="Open Diagrams Tools">
        <ownedTools xsi:type="tool_1:OperationAction" name="Open Activity View" precondition="aql:self.oclIsKindOf(atomicitydecomposition::FlowDiagram) ">
          <view name="views"/>
          <initialOperation>
            <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']"/>
          </initialOperation>
        </ownedTools>
        <ownedTools xsi:type="tool_1:OperationAction" name="Open in a separate ERS Diagram" precondition="aql:self.oclIsKindOf(atomicitydecomposition::FlowDiagram) ">
          <view name="views"/>
          <initialOperation>
            <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']"/>
          </initialOperation>
        </ownedTools>
      </toolSection>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ERS Activity Diagram View" domainClass="atomicitydecomposition::FlowDiagram" enablePopupBars="true">
      <filters xsi:type="filter:CompositeFilterDescription" name="LevelFilter" label="Hide all Leaf decompositions">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']/@subContainerMappings[name='DecomposeSubNode']" semanticConditionExpression="aql:false"/>
      </filters>
      <layout xsi:type="description_1:CompositeLayout" padding="50"/>
      <defaultLayer name="Default">
        <nodeMappings name="InitialNode" semanticCandidatesExpression="var:self" domainClass="atomicitydecomposition::FlowDiagram">
          <style xsi:type="style:DotDescription" showIcon="false" labelExpression="[''/]" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="FinalNode" semanticCandidatesExpression="var:self" domainClass="atomicitydecomposition::FlowDiagram">
          <style xsi:type="style:DotDescription" showIcon="false" labelExpression="[''/]" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="DecisionNode" semanticCandidatesExpression="aql:self.getElementsWithDecisionNodeRepresentation()" documentation="Represents a Xor Node as a Decision Node&#xD;&#xA;Counterpart of the Merge Node.&#xD;&#xA;&#xD;&#xA;ie : Yes one Xor element is thus represented as TWO Nodes : One DecisionNode, and one MergeNode" domainClass="atomicitydecomposition::Constructor">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="2" showIcon="false" labelExpression="[''/]" hideLabelByDefault="true" sizeComputationExpression="4" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MergeNode" semanticCandidatesExpression="aql:self.getElementsWithMergeNodeRepresentation()" documentation="Represents a Xor Node as a Merge Node&#xD;&#xA;Counterpart of the Decision Node.&#xD;&#xA;&#xD;&#xA;ie : Yes one Xor element is thus represented as TWO Nodes : One DecisionNode, and one MergeNode" domainClass="atomicitydecomposition::Constructor">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="2" showIcon="false" labelExpression="[''/]" hideLabelByDefault="true" sizeComputationExpression="4" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ForkNode" semanticCandidatesExpression="aql:self.getElementsWithForkNodeRepresentation()" domainClass="atomicitydecomposition::Constructor">
          <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[''/]" labelPosition="node" resizeKind="NSEW" width="25" height="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="JoinNode" semanticCandidatesExpression="aql:self.getDirectChildrenOfFlowDiagram()" domainClass="atomicitydecomposition::And">
          <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[''/]" labelPosition="node" resizeKind="NSEW" width="25" height="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="LoopStartNode" semanticCandidatesExpression="aql:self.getDirectChildrenOfFlowDiagram()" domainClass="atomicitydecomposition::Loop">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="2" showIcon="false" labelExpression="[''/]" hideLabelByDefault="true" sizeComputationExpression="4" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="LoopDecisionNode" semanticCandidatesExpression="aql:self.getDirectChildrenOfFlowDiagram()" documentation="This node is separate from the DecisionNode; This is intended, as it allows to display correctly the links between loop components." domainClass="atomicitydecomposition::Loop">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="2" showIcon="false" labelExpression="[''/]" hideLabelByDefault="true" sizeComputationExpression="4" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="InitialEdge" documentation="Link between the initial state (root FlowDiagram) and the first activity (left-most Leaf / Child)" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='InitialNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@borderedNodeMappings[name='AllNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@borderedNodeMappings[name='OneNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@borderedNodeMappings[name='SomeNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@borderedNodeMappings[name='ParNodeSubEllipse']" targetFinderExpression="aql:self.refine->asOrderedSet()->first()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="SequenceEdge" documentation="Allows for simple sequence links to be drawn" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@borderedNodeMappings[name='AllNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@borderedNodeMappings[name='OneNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@borderedNodeMappings[name='ParNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@borderedNodeMappings[name='SomeNodeSubEllipse']" targetFinderExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) or self.eContainer().oclIsKindOf(atomicitydecomposition::Loop)) then self.getFollowingChild() else null endif">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="DecisionBranchingEdge" documentation="Branching edges from a Decision Node (Xor) to an Activity (Leaf)" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']" targetFinderExpression="service:getLinkedLeavesFromConstructor()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="DecisionMergeEdge" documentation="Link between" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode']" targetFinderExpression="aql:self.eContainer()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="FinalEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='FinalNode']" targetFinderExpression="aql: if (self.eContainer().refine->asOrderedSet()->last() == self) then self.eContainer() else null endif">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ForkEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']" targetFinderExpression="service:getLinkedLeavesFromConstructor()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="JoinEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode']" targetFinderExpression="aql:self.eContainer()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="LoopStartToBranchEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode']" targetFinderExpression="aql:self">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="LoopBodyEndEdge" documentation="This Edge represents the loop itself, it is the arrow going from the last event in the loop body, do the loop's &quot;LoopStartNode&quot;" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode']" targetFinderExpression="aql: if self.eContainer().oclIsKindOf(atomicitydecomposition::Loop) and self.eContainer().oclAsType(atomicitydecomposition::Loop).loopLink->asSequence()->last() = self then self.eContainer() else null endif">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="LoopStartBranchEdge" sourceMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode']" targetMapping="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']" targetFinderExpression="aql:self.loopLink->first()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ActivityNode" labelDirectEdit="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DirectEditLeafName']" semanticCandidatesExpression="aql:self.getLeavesToRenderInActivityDiagram()" domainClass="atomicitydecomposition::Leaf" childrenPresentation="HorizontalStack">
          <subContainerMappings name="DecomposeSubNode" preconditionExpression="aql:self.eContainer().getDisplayLeafDecompositionsProperty()" semanticCandidatesExpression="aql:self.decompose" domainClass="atomicitydecomposition::FlowDiagram" reusedNodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='FinalNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='InitialNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@borderedNodeMappings[name='AllNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@borderedNodeMappings[name='OneNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@borderedNodeMappings[name='SomeNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@borderedNodeMappings[name='ParNodeSubEllipse']" reusedContainerMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']/@subContainerMappings[name='DecomposeSubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@subContainerMappings[name='ActivitySubNode']">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" borderLineStyle="dot" showIcon="false" backgroundColor="//@userColorsPalettes[name='CustomColors']/@entries[name='lighter_green']" foregroundColor="//@userColorsPalettes[name='CustomColors']/@entries[name='lighter_green']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql: self.getLeafLabelWithParameters(self.eContainer(), self.eContainer().eContainer())">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <containerMappings name="AllNode" semanticCandidatesExpression="aql:self.getDirectChildrenOfFlowDiagram()" domainClass="atomicitydecomposition::All">
          <borderedNodeMappings name="AllNodeSubEllipse" semanticCandidatesExpression="var:self" domainClass="atomicitydecomposition::All">
            <style xsi:type="style:EllipseNodeDescription" labelExpression="service:getAllLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ActivitySubNode" labelDirectEdit="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DirectEditLeafName']" semanticCandidatesExpression="aql:self.allLink" domainClass="atomicitydecomposition::Leaf" reusedNodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='FinalNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='InitialNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@borderedNodeMappings[name='AllNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@borderedNodeMappings[name='OneNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@borderedNodeMappings[name='SomeNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@borderedNodeMappings[name='ParNodeSubEllipse']" reusedContainerMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']/@subContainerMappings[name='DecomposeSubNode']" childrenPresentation="VerticalStack">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql: self.getLeafLabelWithParameters(self.eContainer(), self.eContainer().eContainer())">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[''/]">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="SomeNode" semanticCandidatesExpression="aql:self.getDirectChildrenOfFlowDiagram()" domainClass="atomicitydecomposition::Some">
          <borderedNodeMappings name="SomeNodeSubEllipse" semanticCandidatesExpression="var:self" domainClass="atomicitydecomposition::Some">
            <style xsi:type="style:EllipseNodeDescription" labelExpression="service:getSomeLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ActivitySubNode" labelDirectEdit="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DirectEditLeafName']" semanticCandidatesExpression="aql:self.someLink" domainClass="atomicitydecomposition::Leaf" reusedNodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='FinalNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='InitialNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@borderedNodeMappings[name='AllNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@borderedNodeMappings[name='OneNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@borderedNodeMappings[name='SomeNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@borderedNodeMappings[name='ParNodeSubEllipse']" reusedContainerMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']/@subContainerMappings[name='DecomposeSubNode']" childrenPresentation="VerticalStack">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[''/]">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="OneNode" semanticCandidatesExpression="aql:self.getDirectChildrenOfFlowDiagram()" domainClass="atomicitydecomposition::One">
          <borderedNodeMappings name="OneNodeSubEllipse" semanticCandidatesExpression="var:self" domainClass="atomicitydecomposition::One">
            <style xsi:type="style:EllipseNodeDescription" labelExpression="service:getOneLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ActivitySubNode" labelDirectEdit="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DirectEditLeafName']" semanticCandidatesExpression="aql:self.oneLink" domainClass="atomicitydecomposition::Leaf" reusedNodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='FinalNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='InitialNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@borderedNodeMappings[name='AllNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@borderedNodeMappings[name='OneNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@borderedNodeMappings[name='SomeNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@borderedNodeMappings[name='ParNodeSubEllipse']" reusedContainerMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']/@subContainerMappings[name='DecomposeSubNode']" childrenPresentation="VerticalStack">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[''/]">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="ParNode" semanticCandidatesExpression="aql:self.getDirectChildrenOfFlowDiagram()" domainClass="atomicitydecomposition::Par">
          <borderedNodeMappings name="ParNodeSubEllipse" semanticCandidatesExpression="var:self" domainClass="atomicitydecomposition::Par">
            <style xsi:type="style:EllipseNodeDescription" labelExpression="service:getParLabelWithParameters()" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ActivitySubNode" labelDirectEdit="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DirectEditLeafName']" semanticCandidatesExpression="aql:self.parLink" domainClass="atomicitydecomposition::Leaf" reusedNodeMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='DecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='FinalNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='ForkNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='InitialNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='JoinNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopDecisionNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='LoopStartNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@nodeMappings[name='MergeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@borderedNodeMappings[name='AllNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@borderedNodeMappings[name='ParNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@borderedNodeMappings[name='SomeNodeSubEllipse'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@borderedNodeMappings[name='OneNodeSubEllipse']" reusedContainerMappings="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ParNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='AllNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='SomeNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='OneNode']/@subContainerMappings[name='ActivitySubNode'] //@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@containerMappings[name='ActivityNode']/@subContainerMappings[name='DecomposeSubNode']" childrenPresentation="VerticalStack">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[''/]">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <toolSections name="OpenSubDiagram">
          <ownedTools xsi:type="tool_1:OperationAction" name="Open in a separate Activity View Diagram" precondition="aql:self.oclIsKindOf(atomicitydecomposition::FlowDiagram)">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="Open Related ERS Diagram" precondition="aql:self.oclIsKindOf(atomicitydecomposition::FlowDiagram)">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Diagram']"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Show/Hide Decompositions">
          <ownedTools xsi:type="tool_1:OperationAction" name="Show Decompositions" precondition="aql:self.oclIsKindOf(atomicitydecomposition::Leaf) and (self.hasDecompose()) and (not self.getDisplayLeafDecompositionsProperty())">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if self.oclIsKindOf(atomicitydecomposition::Leaf) then self.setSubDiagramVisibility(true) else null endif"/>
                <subModelOperations xsi:type="tool_1:Let" variableName="callReturn2" valueExpression="service:relayoutDiagram()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="Hide Decompositions" precondition="aql:self.oclIsKindOf(atomicitydecomposition::Leaf) and (self.hasDecompose()) and (self.getDisplayLeafDecompositionsProperty())">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if self.oclIsKindOf(atomicitydecomposition::Leaf) then self.setSubDiagramVisibility(false) else null endif"/>
                <subModelOperations xsi:type="tool_1:Let" variableName="callReturn2" valueExpression="service:relayoutDiagram()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="Open Decompositions in a Separate Activity Diagram" precondition="aql:self.oclIsKindOf(atomicitydecomposition::Leaf) and  (self.hasDecompose())" forceRefresh="true">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(atomicitydecomposition::Leaf)">
                <subModelOperations xsi:type="tool_1:For" expression="aql:self.decompose" iteratorName="refinement">
                  <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" documentation="preconditions means : &quot;check that currently selected element is the root of the diagram&quot;" name="Show Decomposition up to a certain level" precondition="aql:self.oclIsKindOf(atomicitydecomposition::FlowDiagram) ">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="maxLevelOfDecomposition" valueExpression="aql:self.getMaxLevelOfDecomposition()">
                  <subModelOperations xsi:type="tool_1:Let" variableName="fieldValue" valueExpression="maxLevelOfDecomposition"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Decomposition Level Wanted Selector">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql:self.showDecompositionUpToLevel(fieldValue)"/>
                          <subModelOperations xsi:type="tool_1:Let" variableName="callReturn2" valueExpression="service:relayoutDiagram()"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Select the level of decomposition that you want to display" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='ERSDiagram']/@ownedRepresentations[name='ERS%20Activity%20Diagram%20View']/@defaultLayer/@toolSections.1/@ownedTools[name='Show%20Decomposition%20up%20to%20a%20certain%20level']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.1/@groups.0"/>
                    <groups name="Default Group" labelExpression="Decomposition Level" domainClass="atomicitydecomposition::FlowDiagram" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:SelectDescription" name="Decomposition Level Wanted Select" labelExpression="Decomposition Level Wanted" helpExpression="The level of decomposition that you want to be shown in the current Activity View Diagram" isEnabledExpression="aql:true" valueExpression="var:fieldValue" candidatesExpression="service:getRange(maxLevelOfDecomposition)" candidateDisplayExpression="aql:(candidate).toString()">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool_1:Let" variableName="fieldValue" valueExpression="var:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="ac.soton.eventb.atomicitydecomposition.design.Services"/>
    <ownedJavaExtensions qualifiedClassName="ac.soton.eventb.atomicitydecomposition.design.ActivityDiagramViewServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="CustomColors">
    <entries xsi:type="description:UserFixedColor" red="235" green="250" blue="220" name="lighter_green"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <categories name="ChildProperty ViewCatecory">
      <pages name="Child Properties View" labelExpression="Child Properties" domainClass="atomicitydecomposition::Child" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
      <groups name="Set Ref Group" labelExpression="Set Ref" domainClass="atomicitydecomposition::Child" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CheckboxDescription" name="Ref Checkbox" labelExpression="aql: if self.ref then 'true' else 'false' endif" helpExpression="Use this checkbox to set the &quot;ref&quot; value of this Child" valueExpression="feature:ref">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="ref" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
    </categories>
    <categories name="Constructor Parameter ViewCategory">
      <pages name="Constructor Parameter View" labelExpression="Parameter View" domainClass="atomicitydecomposition::Constructor" semanticCandidateExpression="var:self" preconditionExpression="service:checkIfSelectedElementHasParameter()" groups="//@extensions.0/@categories.1/@groups.0"/>
      <groups name="PropertiesTabParameterGroupConstructor" labelExpression="Parameter Properties" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="service:getParameterFromConstructor()">
        <controls xsi:type="properties:TextDescription" name="variableNameField" labelExpression="Name :" isEnabledExpression="aql:true" valueExpression="feature:name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::Constructor) then self.propagateConstructorParameterNameChange(self.eContainer(), newValue) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="variableTypeField" labelExpression="Type :" isEnabledExpression="aql:true" valueExpression="feature:type">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::Constructor) then self.propagateConstructorParameterTypeChange(self.eContainer(), newValue) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="variableInputExpressionField" labelExpression="Input Expression : " isEnabledExpression="aql:true" valueExpression="feature:InputExpression">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::Constructor) then self.propagateConstructorParameterInputExpresssionChange(self.eContainer(), newValue) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
    </categories>
    <categories name="Constructor Linked Leaves">
      <pages name="Constructor Links View" labelExpression="Links View" domainClass="atomicitydecomposition::Constructor" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.2/@groups.0"/>
      <groups name="PropertiesTabLinksViewGroupConstructor" labelExpression="Existing Links" domainClass="atomicitydecomposition::Constructor" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="linksReference" labelExpression="Links of this element" referenceNameExpression="service:getLinksAttributeName()" referenceOwnerExpression="var:self"/>
      </groups>
    </categories>
    <categories name="FlowDiagram Parameter ViewCategory">
      <pages name="FlowDiagram Parameter View" labelExpression="Parameter View" domainClass="atomicitydecomposition::FlowDiagram" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.3/@groups.0 //@extensions.0/@categories.3/@groups.1"/>
      <groups name="PropertiesTabParameterGroupFlow" labelExpression="aql: 'Parameter Properties of '+self.name" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql: if self.oclIsKindOf(atomicitydecomposition::FlowDiagram) then self.oclAsType(atomicitydecomposition::FlowDiagram).parameters else null endif">
        <controls xsi:type="properties:TextDescription" name="variableNameField" labelExpression="Name :" isEnabledExpression="aql: (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine))" valueExpression="feature:name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine)) then self.propagateParameterNameChange(self.eContainer(), newValue) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="variableTypeField" labelExpression="Type :" isEnabledExpression="aql: (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine))" valueExpression="feature:type">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine)) then self.propagateParameterTypeChange(self.eContainer(), newValue) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="variableInputExpressionField" labelExpression="Input Expression : " isEnabledExpression="aql: (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine))" valueExpression="feature:InputExpression">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine)) then self.propagateParameterInputExpresssionChange(self.eContainer(), newValue) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <actions tooltipExpression="Reorder parameter - Go Up" imageExpression="/ac.soton.eventb.atomicitydecomposition.design/icons/up_arrow.png">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) then self.parameterMoveUp(self.eContainer()) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </actions>
        <actions tooltipExpression="Reorder parameter - Go Down" imageExpression="/ac.soton.eventb.atomicitydecomposition.design/icons/down_arrow.png">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) then self.parameterMoveDown(self.eContainer()) else null endif"/>
            </firstModelOperations>
          </initialOperation>
        </actions>
        <actions tooltipExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine)) then 'Delete this parameter' else 'Operation Disabled' endif" imageExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine)) then '/ac.soton.eventb.atomicitydecomposition.design/icons/delete.PNG' else '/ac.soton.eventb.atomicitydecomposition.design/icons/delete_disabled.PNG' endif">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: not ((self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine)))">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Operation Disabled for this element">
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" labelExpression="aql: 'This operation is disabled for the selected FlowDiagram. \nParameters can only be removed in the root FlowDiagram'" semanticCandidateExpression="var:self"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine))">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Confirmation Dialog">
                  <buttons labelExpression="No" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext"/>
                    </initialOperation>
                  </buttons>
                  <buttons labelExpression="Yes" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql: if (self.eContainer().oclIsKindOf(atomicitydecomposition::FlowDiagram) and self.eContainer().eContainer().oclIsKindOf(machine::Machine)) then self.removeParameter(self.eContainer()) else null endif"/>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" labelExpression="aql: 'Do you really want to delete the parameter ' + self.name +' ?'" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="var:self"/>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </actions>
      </groups>
      <groups name="AddParameterGroup" documentation="Allows the user to add a parameter to a FlowDiagram.&#xD;&#xA;This command is only made avalaible for the top-level flow diagram.&#xD;&#xA;Note that any parameter created via this command will be inherited by all of its children FlowDiagram." labelExpression="Add a Parameter" domainClass="atomicitydecomposition::FlowDiagram" semanticCandidateExpression="var:self" preconditionExpression="aql: (self.eContainer().oclIsKindOf(machine::Machine))">
        <controls xsi:type="properties:ButtonDescription" name="Add a parameter ..." labelExpression="Add a Parameter to this FlowDiagram" buttonLabelExpression="Add a parameter ...">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="updatedFlowDiagram" valueExpression="var:self"/>
              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="atomicitydecomposition::TypedParameterExpression" referenceName="parameters" variableName="createdParameter"/>
              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:createdParameter">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Information of the new Parameter">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                    </initialOperation>
                  </buttons>
                  <buttons labelExpression="OK" isEnabledExpression="aql:self.oclAsType(atomicitydecomposition::TypedParameterExpression).name &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression &lt;> null and self.oclAsType(atomicitydecomposition::TypedParameterExpression).name.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).type.size() > 0 and self.oclAsType(atomicitydecomposition::TypedParameterExpression).InputExpression.size() > 0" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:Let" variableName="callReturn" valueExpression="aql:updatedFlowDiagram.doInheritanceOfParameter(createdParameter)"/>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="DialogDefaultPage" labelExpression="Enter information for the new parameter" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self" groups="//@extensions.0/@categories.3/@groups.1/@controls.0/@initialOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.0/@groups.0"/>
                  <groups name="DialogDefaultGroup" labelExpression="Parameter description" domainClass="atomicitydecomposition::TypedParameterExpression" semanticCandidateExpression="aql:self">
                    <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                      </initialOperation>
                      <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
                        <style>
                          <labelFontFormat>bold</labelFontFormat>
                        </style>
                      </conditionalStyles>
                    </controls>
                    <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.type">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newValue"/>
                      </initialOperation>
                      <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('type').lowerBound = 1">
                        <style>
                          <labelFontFormat>bold</labelFontFormat>
                        </style>
                      </conditionalStyles>
                    </controls>
                    <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression InputExpression" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('InputExpression')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('InputExpression'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('InputExpression').changeable" valueExpression="aql:self.InputExpression">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:SetValue" featureName="InputExpression" valueExpression="var:newValue"/>
                      </initialOperation>
                      <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('InputExpression').lowerBound = 1">
                        <style>
                          <labelFontFormat>bold</labelFontFormat>
                        </style>
                      </conditionalStyles>
                    </controls>
                    <controls xsi:type="properties:TextDescription" name="atomicitydecomposition::TypedParameterExpression comment" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comment')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comment'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comment').changeable" valueExpression="aql:self.comment">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="var:newValue"/>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
    </categories>
    <categories name="FlowDiagram Refines ViewCategory">
      <pages name="FlowDiagram Refines View" labelExpression="Refinements View" domainClass="atomicitydecomposition::FlowDiagram" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.0"/>
      <groups name="PropertiesTabRefinesGroupFlowDiagram" labelExpression="Refinements of this FlowDiagram" domainClass="atomicitydecomposition::FlowDiagram" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="refineReference" labelExpression="Refinements" referenceNameExpression="refine" referenceOwnerExpression="var:self"/>
      </groups>
    </categories>
  </extensions>
</description:Group>
